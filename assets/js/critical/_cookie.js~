/* eslint-disable no-undef, no-unused-vars */

const ConsentManager = {
  hasConsent: function (category) {}
}

function registerConsentManager (mgr) {
  if (true) {
  // if (implementsInterface(mgr, ConsentManager)) {
    _manager = mgr
  } else {
    console.error('Provided consent manager does implement expected interface')
  }
}

function implementsInterface (obj, interfaceObj) {
  for (const method in interfaceObj) {
    if (!(method in obj) ||
          typeof obj[method] !== 'function') {
      return false
    }
  }
  return true
}

function hasConsent (category) {
  if (typeof _manager !== 'undefined' && _manager === null) {
    return _manager.hasConsent(category)
  } else {
    return false
  }
}

function getLocalStorage (key, def, category) {
  if (hasConsent(category)) {
    return localStorage.getItem(key)
  } else {
    return def
  }
}

function setLocalStorage (key, val, category) {
  if (hasConsent(category)) {
    localStorage.setItem(key, val)
  }
}

function getSessionStorage (key, def, category) {
  if (hasConsent(category)) {
    return sessionStorage.getItem(key)
  } else {
    return def
  }
}

function setSessionStorage (key, val, category) {
  if (hasConsent(category)) {
    sessionStorage.setItem(key, val)
  }
}
